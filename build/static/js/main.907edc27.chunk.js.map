{"version":3,"sources":["utils/duration/index.js","pomodoro/Timer.js","pomodoro/Display.js","pomodoro/Pomodoro.js","utils/class-names/index.js","utils/useInterval/index.js","App.js","index.js"],"names":["minutesToDuration","givenMinutes","minutes","Math","floor","toString","padStart","secondsToDuration","givenSeconds","seconds","round","Timer","decreaseFocus","increaseFocus","decreaseBreak","increaseBreak","breakDuration","focusDuration","isTimerRunning","className","data-testid","disabled","type","onClick","Display","hidden","currentState","focusCount","breakCount","paused","progress","stopped","displayMain","ticker","style","height","role","aria-valuemin","aria-valuemax","aria-valuenow","width","Pomodoro","classNameToBoolean","useState","setIsTimerRunning","setCurrentState","setFocusDuration","setBreakDuration","setFocusCount","setBreakCount","setDisabled","setHidden","setProgress","setStopped","setPaused","setFocusTime","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","prevCount","Audio","play","console","log","aria-label","title","prevState","oi","Object","entries","reduce","classes","value","concat","undefined","filter","join","App","all","visible","pomodoro","setPomodoro","url","process","REACT_APP_API_BASE_URL","fetch","then","response","json","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.907edc27.chunk.js","sourcesContent":["/**\n * Formats a number of minutes as 'mm:00'.\n *\n * For example,\n *    minutesToDuration(3) = '03:00'\n *    minutesToDuration(45) = '45:00'\n *\n * @param givenMinutes\n *    the number of minutes in the duration\n * @returns {string}\n *    the given minutes formatted as 'mm:00'\n */\n\nexport function minutesToDuration(givenMinutes) {\n  const minutes = Math.floor(givenMinutes).toString().padStart(2, \"0\");\n  return `${minutes}:00`;\n}\n\n/**\n * Formats a number of seconds as 'mm:ss'.\n *\n * For example,\n *    secondsToDuration(305) = '05:05'\n *    secondsToDuration(930) = '15:30'\n *\n * @param givenSeconds\n *    the number of seconds in the duration\n * @returns {string}\n *    the given seconds formatted as 'mm:ss'\n */\n\nexport function secondsToDuration(givenSeconds) {\n  const minutes = Math.floor((givenSeconds % 3600) / 60)\n    .toString()\n    .padStart(2, \"0\");\n  const seconds = Math.round(givenSeconds % 60)\n    .toString()\n    .padStart(2, \"0\");\n  return `${minutes}:${seconds}`;\n}\n","import React from \"react\";\nimport { minutesToDuration } from \"../utils/duration\";\n\nfunction Timer({\n    decreaseFocus,\n    increaseFocus,\n    decreaseBreak,\n    increaseBreak,\n    breakDuration,\n    focusDuration,\n    isTimerRunning\n}){\n    return (\n        <div className=\"row\">\n        <div className=\"col\">\n        <div className=\"input-group input-group-lg mb-2\">\n        <span className=\"input-group-text\" data-testid=\"duration-focus\">\n        {/* TODO: Update this text to display the current focus session duration */}\n        Focus Duration: {minutesToDuration(focusDuration)}\n            </span>\n            <div className=\"input-group-append\">\n                <button\n                    disabled={isTimerRunning || focusDuration === 5}\n                    type=\"button\"\n                    className=\"btn btn-secondary\"\n                    data-testid=\"decrease-focus\"\n                    onClick={decreaseFocus}       \n                >\n                <span className=\"oi oi-minus\" />\n                </button>\n\n                <button\n                    disabled={isTimerRunning || focusDuration === 60}\n                    type=\"button\"\n                    className=\"btn btn-secondary\"\n                    data-testid=\"increase-focus\"\n                    onClick={increaseFocus}    \n                >\n                <span className=\"oi oi-plus\" />\n                </button>\n            </div>\n            </div>\n        </div>\n        <div className=\"row\">\n        <div className=\"col\">\n        <div className=\"input-group input-group-lg mb-2\">\n        <span className=\"input-group-text\" data-testid=\"duration-break\">\n        {/* TODO: Update this text to display the current focus session duration */}\n        Break Duration: {minutesToDuration(breakDuration)}\n            </span>\n            <div className=\"input-group-append\">\n                <button\n                    disabled={isTimerRunning || breakDuration === 1}\n                    type=\"button\"\n                    className=\"btn btn-secondary\"\n                    data-testid=\"decrease-break\"\n                    onClick={decreaseBreak}       \n                >\n                <span className=\"oi oi-minus\" />\n                </button>\n\n                <button\n                    disabled={isTimerRunning || breakDuration === 15}\n                    type=\"button\"\n                    className=\"btn btn-secondary\"\n                    data-testid=\"increase-break\"\n                    onClick={increaseBreak}    \n                >\n                <span className=\"oi oi-plus\" />\n                </button>\n                </div>\n            </div>\n        </div>\n        </div>\n        </div>\n    )\n}\n\nexport default Timer;\n","import React from \"react\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\n\n\nexport default function Display({  \n    focusDuration, \n    breakDuration,\n    hidden,\n    currentState,\n    focusCount,\n    breakCount,\n    paused,\n    progress,\n    stopped\n}) {\n\n    function displayMain({ currentState, focusDuration, breakDuration }) {\n        if(currentState === \"Focusing\") {\n            return `Focusing for ${minutesToDuration(focusDuration)} minutes`\n        }if(currentState === \"On Break\") {\n            return `On Break for ${minutesToDuration(breakDuration)} minutes`\n        }\n    }\n\n    function ticker({ stopped, currentState, focusCount, breakCount }){\n      if(stopped) {\n        return null;\n      }else{\n        if(currentState === \"Focusing\") {\n            return secondsToDuration(focusCount)\n        }if(currentState === \"On Break\") {\n            return secondsToDuration(breakCount)\n        }\n      }\n    }\n\n    return (\n        hidden && (\n        <div>\n        {/* TODO: This area should show only when there is an active focus or break - i.e. the session is running or is paused */}\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            {/* TODO: Update message below to include current session (Focusing or On Break) total duration */}\n            <h2 data-testid=\"session-title\">\n                {displayMain({ currentState, focusDuration, breakDuration })}\n            </h2>\n            {/* TODO: Update message below correctly format the time remaining in the current session */}\n            <p className=\"lead\" data-testid=\"session-sub-title\">\n                {ticker ({stopped, currentState, focusCount, breakCount})} remaining\n            </p>\n            <h2>{paused}</h2>\n          </div>\n        </div>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            <div className=\"progress\" style={{ height: \"20px\" }}>\n              <div\n                className=\"progress-bar\"\n                role=\"progressbar\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                aria-valuenow={progress}// TODO: Increase aria-valuenow as elapsed time increases\n                style={{ width: `${progress}%` }} // TODO: Increase width % as elapsed time increases\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n    )\n}\n","import React, { useEffect, useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport Timer from \"./Timer\";\nimport Display from \"./Display\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [ isTimerRunning, setIsTimerRunning ] = useState(false);\n  const [ currentState, setCurrentState ] = useState(\"Focusing\");\n\n  // ToDo: Allow the user to adjust the focus and break duration.\n  const [ focusDuration, setFocusDuration ] = useState(25);\n  const [ breakDuration, setBreakDuration ] = useState(5);\n  const [ focusCount, setFocusCount ] = useState(focusDuration*60)\n  const [ breakCount, setBreakCount ] = useState(breakDuration*60)\n  const [ disabled, setDisabled ] = useState(true);\n  const [ hidden, setHidden ] = useState(false);\n  const [ progress, setProgress ] = useState(0);\n  const [ stopped, setStopped ] = useState(true);\n  const [ paused, setPaused ] = useState(\"\");\n  const [ focusTime, setFocusTime ] = useState(focusDuration)\n\n  function playPause() {\n      setIsTimerRunning((prevState) => !prevState);\n      setStopped(false)\n      setDisabled(false)\n      if(!isTimerRunning) {\n        setHidden(true);\n        setPaused(\"\")\n      }else{\n        setPaused(\"PAUSED\");\n      }\n    }\n\n    function decreaseFocus() {\n      setFocusDuration(focusDuration - 5);\n      setFocusCount((focusDuration - 5)*60)\n    }\n    function increaseFocus() {\n      setFocusDuration(focusDuration + 5);\n      setFocusCount((focusDuration + 5)*60)\n    }\n    function decreaseBreak() {\n      setBreakDuration(breakDuration - 1);\n      setBreakCount((breakDuration - 1)*60)\n    }\n    function increaseBreak() {\n      setBreakDuration(breakDuration + 1);\n      setBreakCount((breakDuration + 1)*60)\n    }\n   \n    useInterval(() => {\n        if(focusCount > 0 && currentState===\"Focusing\"){\n          setFocusCount((prevCount) => prevCount - 1);\n          setProgress(100*(focusDuration*60 - focusCount) / (focusDuration*60));\n\n        }else if(breakCount > 0 && currentState===\"On Break\"){\n          setBreakCount((prevCount) => prevCount - 1);  \n          setProgress(100*(breakDuration*60 - breakCount) / (breakDuration*60));\n\n        }else if(currentState === \"Focusing\" && focusCount === 0) {\n          new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();\n          setProgress(0)\n          setCurrentState(\"On Break\")\n          setFocusTime(breakDuration)\n          setBreakCount(breakDuration*60)\n          console.log(\"BREAK\")\n          \n        }else if(currentState === \"On Break\" && focusCount === 0){\n          new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();\n          setProgress(0)\n          setCurrentState(\"Focusing\")\n          setFocusTime(focusDuration)\n          setFocusCount(focusDuration*60)\n          console.log(\"FOCUS\")\n        }\n      },\n      isTimerRunning ? 1000 : null\n    );\n\n    // useEffect(() => {\n    //   if(!isTimerRunning && focusCount === 0) {\n    //     setCurrentState(\"On Break\")\n    //     setFocusCount(focusDuration * 60)\n    //     console.log(\"render focus\")\n    //     console.log(focusCount)\n    //   }\n    // }, [focusCount])\n\n    useEffect(() => {\n      setFocusTime(focusDuration);\n    }, [focusDuration]);\n\n    function stop() {\n      setFocusCount(focusDuration * 60)\n      setBreakCount(breakDuration * 60)\n      setIsTimerRunning(false);\n      setHidden(false);\n      setCurrentState(\"Focusing\");\n      setProgress(0);\n      setDisabled(true);\n    }\n\n  return (\n    <div className=\"pomodoro\">\n        <div>\n            <Timer \n            increaseBreak={increaseBreak}\n            decreaseBreak={decreaseBreak}\n            increaseFocus={increaseFocus}\n            decreaseFocus={decreaseFocus}\n            focusDuration={focusDuration}\n            breakDuration={breakDuration}\n            isTimerRunning={isTimerRunning}\n            />\n      </div>\n\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            > \n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n            {/* TODO: Implement stopping the current focus or break session. and disable the stop button when there is no active session */}\n            {/* TODO: Disable the stop button when there is no active session */}\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              data-testid=\"stop\"\n              title=\"Stop the session\"\n              onClick={stop}\n              disabled={disabled}\n            >\n              <span className=\"oi oi-media-stop\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      <div>\n        {/* TODO: This area should show only when there is an active focus or break - i.e. the session is running or is paused */}\n        <Display \n          disabled={disabled}\n          hidden={hidden}\n          currentState={currentState}\n          focusDuration={focusDuration}\n          breakDuration={breakDuration}\n          isTimerRunning={isTimerRunning}\n          focusCount={focusCount}\n          breakCount={breakCount}\n          progress={progress}\n          stopped={stopped}\n          paused={paused}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Pomodoro;\n","/**\n * Use this function to dynamically assign the className property of react components.\n *\n * Usage:\n *\n *  <span className={classNames({\n *               \"oi\": true,\n *               \"oi-media-play\": currentState.isPaused,\n *               'oi-media-pause': !currentState.isPaused\n *             })}/>\n *\n *   if currentState.isPaused === true, the className will be \"oi oi-media-play\" otherwise it will be \"oi oi-media-pause\"\n *\n * @param classNameToBoolean\n *    a map of a class name to a boolean value. If the boolean value is `true`, the class name is included, otherwise it is excluded.\n * @returns {string}\n *    a space delimited string of the class names which have a value of `true`.\n */\nexport default function classNames(classNameToBoolean) {\n  return Object.entries(classNameToBoolean)\n    .reduce(\n      (classes, [className, value]) =>\n        classes.concat(value ? className : undefined),\n      []\n    )\n    .filter((className) => className !== undefined)\n    .join(\" \");\n}\n","// This custom hook is from: https://overreacted.io/making-setinterval-declarative-with-react-hooks/\n\nimport { useEffect, useRef } from \"react\";\n\nexport default function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Pomodoro from \"./pomodoro/Pomodoro\";\nimport { useState, useEffect } from \"react\";\n\nfunction App() {\n  const [pomodoro, setPomodoro] = useState({\n    all: [],\n    visible: [],\n  });\n\n  useEffect(() => {\n    const url = `${process.env.REACT_APP_API_BASE_URL}/pomodoro`;\n    fetch(url)\n      .then((response) => response.json())\n      .then((response) => {\n        setPomodoro({\n          all: response,\n          visible: response,\n        });\n      });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header container\">\n        <h1>Pomodoro Timer</h1>\n      </header>\n      <div className=\"container\">\n        <Pomodoro pomodoro={pomodoro} setPomodoro={setPomodoro} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}