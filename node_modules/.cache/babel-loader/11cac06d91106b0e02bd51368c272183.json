{"ast":null,"code":"var _jsxFileName = \"/Users/mattairola/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js\";\nimport React, { useEffect, useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\nimport useInterval from \"../utils/useInterval\";\nimport Timer from \"./Timer\";\nimport Display from \"./Display\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false); // The current session - null where there is no session running\n\n  const [currentState, setCurrentState] = useState(\"Focusing\");\n  const [session, setSession] = useState(null); // ToDo: Allow the user to adjust the focus and break duration.\n\n  const [focusDuration, setFocusDuration] = useState(25);\n  const [breakDuration, setBreakDuration] = useState(5);\n  const [focusCount, setFocusCount] = useState(focusDuration * 60);\n  const [breakCount, setBreakCount] = useState(breakDuration * 60);\n  const [disabled, setDisabled] = useState(true);\n  const [hidden, setHidden] = useState(false);\n\n  function playPause() {\n    setIsTimerRunning(prevState => !prevState);\n    setDisabled(false);\n\n    if (!isTimerRunning) {\n      setHidden(true);\n    }\n  }\n\n  useInterval(() => {\n    if (focusCount === 0 || breakCount === 0) {\n      new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play(); // return setSession(nextSession(focusDuration, breakDuration));\n    } else if (focusCount > 0 && focusCount === focusDuration) {\n      setFocusCount(prevCount => prevCount - 1);\n    } else if (breakCount > 0) {\n      setBreakCount(prevCount => prevCount - 1);\n    }\n  }, isTimerRunning ? 1000 : null); // function nextSession(focusDuration, breakDuration) {\n  //   return (currentState) => {\n  //   if (currentState === \"Focusing\") {\n  //     return {\n  //       label: \"On Break\",\n  //           timeRemaining: breakDuration * 60,\n  //         };\n  //       }\n  //       return {\n  //         label: \"Focusing\",\n  //         timeRemaining: focusDuration * 60,\n  //       };\n  //     };\n  //   }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Timer, {\n    title: \"Focus Duration\",\n    value: focusDuration,\n    increment: 5,\n    onChange: setFocusDuration,\n    lowerLimit: 5,\n    upperLimit: 60,\n    disabled: isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Timer, {\n    title: \"Break Duration\",\n    value: breakDuration,\n    increment: 1,\n    onChange: setBreakDuration,\n    lowerLimit: 1,\n    upperLimit: 15,\n    disabled: isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group btn-group-lg mb-2\",\n    role: \"group\",\n    \"aria-label\": \"Timer controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"data-testid\": \"play-pause\",\n    title: \"Start or pause timer\",\n    onClick: playPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames({\n      oi: true,\n      \"oi-media-play\": !isTimerRunning,\n      \"oi-media-pause\": isTimerRunning\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"stop\",\n    title: \"Stop the session\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-media-stop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Display, {\n    disabled: disabled,\n    hidden: hidden,\n    currentState: currentState,\n    focusDuration: focusDuration,\n    breakDuration: breakDuration,\n    isTimerRunning: isTimerRunning,\n    focusCount: focusCount,\n    breakCount: breakCount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["/Users/mattairola/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useEffect","useState","classNames","minutesToDuration","secondsToDuration","useInterval","Timer","Display","Pomodoro","isTimerRunning","setIsTimerRunning","currentState","setCurrentState","session","setSession","focusDuration","setFocusDuration","breakDuration","setBreakDuration","focusCount","setFocusCount","breakCount","setBreakCount","disabled","setDisabled","hidden","setHidden","playPause","prevState","Audio","play","prevCount","oi"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\nimport useInterval from \"../utils/useInterval\";\nimport Timer from \"./Timer\";\nimport Display from \"./Display\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  // The current session - null where there is no session running\n  const [ currentState, setCurrentState ] = useState(\"Focusing\");\n  const [session, setSession] = useState(null);\n\n  // ToDo: Allow the user to adjust the focus and break duration.\n  const [ focusDuration, setFocusDuration ] = useState(25);\n  const [ breakDuration, setBreakDuration ] = useState(5);\n  const [ focusCount, setFocusCount ] = useState(focusDuration*60)\n  const [ breakCount, setBreakCount ] = useState(breakDuration*60)\n  const [ disabled, setDisabled ] = useState(true);\n  const [ hidden, setHidden ] = useState(false);\n\n  function playPause() {\n      setIsTimerRunning((prevState) => !prevState);\n      setDisabled(false)\n      if(!isTimerRunning) {\n        setHidden(true);\n      }  \n    }\n   \n    useInterval(() => {\n      if(focusCount === 0 || breakCount === 0) {\n      new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();\n      // return setSession(nextSession(focusDuration, breakDuration));\n      }else if(focusCount > 0 && focusCount === focusDuration){\n        setFocusCount((prevCount) => prevCount - 1);\n      }else if(breakCount > 0){\n        setBreakCount((prevCount) => prevCount - 1);\n        }\n    },\n      isTimerRunning ? 1000 : null\n    );\n\n      // function nextSession(focusDuration, breakDuration) {\n      //   return (currentState) => {\n      //   if (currentState === \"Focusing\") {\n      //     return {\n      //       label: \"On Break\",\n      //           timeRemaining: breakDuration * 60,\n      //         };\n      //       }\n      //       return {\n      //         label: \"Focusing\",\n      //         timeRemaining: focusDuration * 60,\n      //       };\n      //     };\n      //   }\n\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"input-group input-group-lg mb-2\">\n            <Timer \n            title=\"Focus Duration\"\n            value={focusDuration}\n            increment={5}\n            onChange={setFocusDuration}\n            lowerLimit={5}\n            upperLimit={60}\n            disabled={isTimerRunning}\n            />\n          </div>\n        </div>\n\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <div className=\"input-group input-group-lg mb-2\">\n              <Timer \n              title=\"Break Duration\" \n              value={breakDuration}\n              increment={1}\n              onChange={setBreakDuration}\n              lowerLimit={1}\n              upperLimit={15}\n              disabled={isTimerRunning}     \n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            > \n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n            {/* TODO: Implement stopping the current focus or break session. and disable the stop button when there is no active session */}\n            {/* TODO: Disable the stop button when there is no active session */}\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              data-testid=\"stop\"\n              title=\"Stop the session\"\n        \n            >\n              <span className=\"oi oi-media-stop\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      <div>\n        {/* TODO: This area should show only when there is an active focus or break - i.e. the session is running or is paused */}\n        <Display \n          disabled={disabled}\n          hidden={hidden}\n          currentState={currentState}\n          focusDuration={focusDuration}\n          breakDuration={breakDuration}\n          isTimerRunning={isTimerRunning}\n          focusCount={focusCount}\n          breakCount={breakCount}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}