{"ast":null,"code":"var _jsxFileName = \"/Users/mattairola/Pomodoro/src/pomodoro/Pomodoro.js\";\nimport React, { useEffect, useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport Timer from \"./Timer\";\nimport Display from \"./Display\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [currentState, setCurrentState] = useState(\"Focusing\"); // ToDo: Allow the user to adjust the focus and break duration.\n\n  const [focusDuration, setFocusDuration] = useState(25);\n  const [breakDuration, setBreakDuration] = useState(5);\n  const [focusCount, setFocusCount] = useState(focusDuration * 60);\n  const [breakCount, setBreakCount] = useState(breakDuration * 60);\n  const [disabled, setDisabled] = useState(true);\n  const [hidden, setHidden] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [stopped, setStopped] = useState(true);\n  const [paused, setPaused] = useState(\"\");\n  const [focusTime, setFocusTime] = useState(focusDuration);\n\n  function playPause() {\n    setIsTimerRunning(prevState => !prevState);\n    setStopped(false);\n    setDisabled(false);\n\n    if (!isTimerRunning) {\n      setHidden(true);\n      setPaused(\"\");\n    } else {\n      setPaused(\"PAUSED\");\n    }\n  }\n\n  function decreaseFocus() {\n    setFocusDuration(focusDuration - 5);\n    setFocusCount((focusDuration - 5) * 60);\n  }\n\n  function increaseFocus() {\n    setFocusDuration(focusDuration + 5);\n    setFocusCount((focusDuration + 5) * 60);\n  }\n\n  function decreaseBreak() {\n    setBreakDuration(breakDuration - 1);\n    setBreakCount((breakDuration - 1) * 60);\n  }\n\n  function increaseBreak() {\n    setBreakDuration(breakDuration + 1);\n    setBreakCount((breakDuration + 1) * 60);\n  }\n\n  useInterval(() => {\n    if (focusCount > 0 && currentState === \"Focusing\") {\n      setFocusCount(prevCount => prevCount - 1);\n      setProgress(100 * (focusDuration * 60 - focusCount) / (focusDuration * 60));\n    } else if (currentState === \"Focusing\") {\n      new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();\n      setProgress(0);\n      setCurrentState(\"On Break\");\n    } else if (breakCount > 0 && currentState === \"On Break\") {\n      setBreakCount(prevCount => prevCount - 1);\n      setProgress(100 * (breakDuration * 60 - breakCount) / (breakDuration * 60));\n      console.log(currentState);\n    } else if (breakCount === 0) {\n      new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();\n      setProgress(0);\n      setCurrentState(\"Focusing\");\n    }\n  }, isTimerRunning ? 1000 : null); // useEffect(() => {\n  //   if(!isTimerRunning && focusCount === 0) {\n  //     setCurrentState(\"On Break\")\n  //     setFocusCount(focusDuration * 60)\n  //     console.log(\"render focus\")\n  //     console.log(focusCount)\n  //   }\n  // }, [focusCount])\n\n  useEffect(() => {\n    setFocusTime(focusDuration);\n  }, [focusDuration]);\n\n  function stop() {\n    setFocusCount(focusDuration * 60);\n    setBreakCount(breakDuration * 60);\n    setIsTimerRunning(false);\n    setHidden(false);\n    setCurrentState(\"Focusing\");\n    setProgress(0);\n    setDisabled(true);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Timer, {\n    increaseBreak: increaseBreak,\n    decreaseBreak: decreaseBreak,\n    increaseFocus: increaseFocus,\n    decreaseFocus: decreaseFocus,\n    focusDuration: focusDuration,\n    breakDuration: breakDuration,\n    isTimerRunning: isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group btn-group-lg mb-2\",\n    role: \"group\",\n    \"aria-label\": \"Timer controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"data-testid\": \"play-pause\",\n    title: \"Start or pause timer\",\n    onClick: playPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames({\n      oi: true,\n      \"oi-media-play\": !isTimerRunning,\n      \"oi-media-pause\": isTimerRunning\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"stop\",\n    title: \"Stop the session\",\n    onClick: stop,\n    disabled: disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-media-stop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Display, {\n    disabled: disabled,\n    hidden: hidden,\n    currentState: currentState,\n    focusDuration: focusDuration,\n    breakDuration: breakDuration,\n    isTimerRunning: isTimerRunning,\n    focusCount: focusCount,\n    breakCount: breakCount,\n    progress: progress,\n    stopped: stopped,\n    paused: paused,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["/Users/mattairola/Pomodoro/src/pomodoro/Pomodoro.js"],"names":["React","useEffect","useState","classNames","useInterval","Timer","Display","Pomodoro","isTimerRunning","setIsTimerRunning","currentState","setCurrentState","focusDuration","setFocusDuration","breakDuration","setBreakDuration","focusCount","setFocusCount","breakCount","setBreakCount","disabled","setDisabled","hidden","setHidden","progress","setProgress","stopped","setStopped","paused","setPaused","focusTime","setFocusTime","playPause","prevState","decreaseFocus","increaseFocus","decreaseBreak","increaseBreak","prevCount","Audio","play","console","log","stop","oi"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport Timer from \"./Timer\";\nimport Display from \"./Display\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [ isTimerRunning, setIsTimerRunning ] = useState(false);\n  const [ currentState, setCurrentState ] = useState(\"Focusing\");\n\n  // ToDo: Allow the user to adjust the focus and break duration.\n  const [ focusDuration, setFocusDuration ] = useState(25);\n  const [ breakDuration, setBreakDuration ] = useState(5);\n  const [ focusCount, setFocusCount ] = useState(focusDuration*60)\n  const [ breakCount, setBreakCount ] = useState(breakDuration*60)\n  const [ disabled, setDisabled ] = useState(true);\n  const [ hidden, setHidden ] = useState(false);\n  const [ progress, setProgress ] = useState(0);\n  const [ stopped, setStopped ] = useState(true);\n  const [ paused, setPaused ] = useState(\"\");\n  const [ focusTime, setFocusTime ] = useState(focusDuration)\n\n  function playPause() {\n      setIsTimerRunning((prevState) => !prevState);\n      setStopped(false)\n      setDisabled(false)\n      if(!isTimerRunning) {\n        setHidden(true);\n        setPaused(\"\")\n      }else{\n        setPaused(\"PAUSED\");\n      }\n    }\n\n    function decreaseFocus() {\n      setFocusDuration(focusDuration - 5);\n      setFocusCount((focusDuration - 5)*60)\n    }\n    function increaseFocus() {\n      setFocusDuration(focusDuration + 5);\n      setFocusCount((focusDuration + 5)*60)\n    }\n    function decreaseBreak() {\n      setBreakDuration(breakDuration - 1);\n      setBreakCount((breakDuration - 1)*60)\n    }\n    function increaseBreak() {\n      setBreakDuration(breakDuration + 1);\n      setBreakCount((breakDuration + 1)*60)\n    }\n   \n    useInterval(() => {\n        if(focusCount > 0 && currentState===\"Focusing\"){\n          setFocusCount((prevCount) => prevCount - 1);\n          setProgress(100*(focusDuration*60 - focusCount) / (focusDuration*60));\n        }else if(currentState===\"Focusing\") {\n          new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();\n          setProgress(0)\n          setCurrentState(\"On Break\")\n        }else if(breakCount > 0 && currentState===\"On Break\"){\n          setBreakCount((prevCount) => prevCount - 1);  \n          setProgress(100*(breakDuration*60 - breakCount) / (breakDuration*60));\n          console.log(currentState)\n          \n        }else if(breakCount === 0){\n          new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();\n          setProgress(0)\n          setCurrentState(\"Focusing\")\n        }\n      },\n      isTimerRunning ? 1000 : null\n    );\n\n    // useEffect(() => {\n    //   if(!isTimerRunning && focusCount === 0) {\n    //     setCurrentState(\"On Break\")\n    //     setFocusCount(focusDuration * 60)\n    //     console.log(\"render focus\")\n    //     console.log(focusCount)\n    //   }\n    // }, [focusCount])\n\n    useEffect(() => {\n      setFocusTime(focusDuration);\n    }, [focusDuration]);\n\n    function stop() {\n      setFocusCount(focusDuration * 60)\n      setBreakCount(breakDuration * 60)\n      setIsTimerRunning(false);\n      setHidden(false);\n      setCurrentState(\"Focusing\");\n      setProgress(0);\n      setDisabled(true);\n    }\n\n  return (\n    <div className=\"pomodoro\">\n        <div>\n            <Timer \n            increaseBreak={increaseBreak}\n            decreaseBreak={decreaseBreak}\n            increaseFocus={increaseFocus}\n            decreaseFocus={decreaseFocus}\n            focusDuration={focusDuration}\n            breakDuration={breakDuration}\n            isTimerRunning={isTimerRunning}\n            />\n      </div>\n\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            > \n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n            {/* TODO: Implement stopping the current focus or break session. and disable the stop button when there is no active session */}\n            {/* TODO: Disable the stop button when there is no active session */}\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              data-testid=\"stop\"\n              title=\"Stop the session\"\n              onClick={stop}\n              disabled={disabled}\n            >\n              <span className=\"oi oi-media-stop\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      <div>\n        {/* TODO: This area should show only when there is an active focus or break - i.e. the session is running or is paused */}\n        <Display \n          disabled={disabled}\n          hidden={hidden}\n          currentState={currentState}\n          focusDuration={focusDuration}\n          breakDuration={breakDuration}\n          isTimerRunning={isTimerRunning}\n          focusCount={focusCount}\n          breakCount={breakCount}\n          progress={progress}\n          stopped={stopped}\n          paused={paused}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}