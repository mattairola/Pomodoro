{"ast":null,"code":"var _jsxFileName = \"/Users/mattairola/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js\";\nimport React, { useEffect, useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\nimport useInterval from \"../utils/useInterval\";\nimport Timer from \"./Timer\";\nimport Display from \"./Display\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false); // The current session - null where there is no session running\n\n  const [currentState, setCurrentState] = useState(\"Focusing\");\n  const [session, setSession] = useState(null); // ToDo: Allow the user to adjust the focus and break duration.\n\n  const [focusDuration, setFocusDuration] = useState(25);\n  const [breakDuration, setBreakDuration] = useState(5);\n  const [focusCount, setFocusCount] = useState(focusDuration * 60);\n  const [breakCount, setBreakCount] = useState(breakDuration * 60);\n  const [disabled, setDisabled] = useState(true);\n  const [hidden, setHidden] = useState(false);\n  const [paused, setPaused] = useState(\"\");\n  const [progress, setProgress] = useState(0);\n\n  function playPause() {\n    setIsTimerRunning(prevState => !prevState);\n    setDisabled(false);\n\n    if (!isTimerRunning) {\n      setHidden(true);\n      setPaused(\"\");\n    } else {\n      setPaused(\"PAUSED\");\n    }\n  }\n\n  function decreaseFocus() {\n    setFocusDuration(focusDuration - 5);\n    setFocusCount((focusDuration - 5) * 60);\n  }\n\n  function increaseFocus() {\n    setFocusDuration(focusDuration + 5);\n    setFocusCount((focusDuration + 5) * 60);\n  }\n\n  function decreaseBreak() {\n    setBreakDuration(breakDuration - 1);\n    setBreakCount((breakDuration - 1) * 60);\n  }\n\n  function increaseBreak() {\n    setBreakDuration(breakDuration + 1);\n    setBreakCount((breakDuration + 1) * 60);\n  }\n\n  useInterval(() => {\n    beginSession();\n  }, isTimerRunning ? 1000 : null);\n\n  function beginSession() {\n    if (focusCount === 0 || breakCount === 0) {\n      new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();\n      setProgress(0); // return setSession(nextSession(focusDuration, breakDuration));\n    } else if (focusCount > 0 && currentState === \"Focusing\") {\n      setFocusCount(prevCount => prevCount - 1);\n      setProgress(progress + 100 / focusCount);\n    } else if (breakCount > 0) {\n      setBreakCount(prevCount => prevCount - 1);\n      setProgress(progress + 100 / breakDuration);\n    }\n  }\n\n  function stop() {\n    setFocusCount(focusDuration * 60);\n    setBreakCount(breakDuration * 60);\n    setIsTimerRunning(false);\n    setHidden(false);\n    setCurrentState(\"Focusing\");\n    setProgress(0);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Timer, {\n    disabled: isTimerRunning,\n    increaseBreak: increaseBreak,\n    decreaseBreak: decreaseBreak,\n    increaseFocus: increaseFocus,\n    decreaseFocus: decreaseFocus,\n    focusDuration: focusDuration,\n    breakDuration: breakDuration,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group btn-group-lg mb-2\",\n    role: \"group\",\n    \"aria-label\": \"Timer controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"data-testid\": \"play-pause\",\n    title: \"Start or pause timer\",\n    onClick: playPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames({\n      oi: true,\n      \"oi-media-play\": !isTimerRunning,\n      \"oi-media-pause\": isTimerRunning\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"stop\",\n    title: \"Stop the session\",\n    onClick: stop,\n    disabled: disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-media-stop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Display, {\n    disabled: disabled,\n    hidden: hidden,\n    currentState: currentState,\n    focusDuration: focusDuration,\n    breakDuration: breakDuration,\n    isTimerRunning: isTimerRunning,\n    focusCount: focusCount,\n    breakCount: breakCount,\n    paused: paused,\n    progress: progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["/Users/mattairola/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useEffect","useState","classNames","minutesToDuration","secondsToDuration","useInterval","Timer","Display","Pomodoro","isTimerRunning","setIsTimerRunning","currentState","setCurrentState","session","setSession","focusDuration","setFocusDuration","breakDuration","setBreakDuration","focusCount","setFocusCount","breakCount","setBreakCount","disabled","setDisabled","hidden","setHidden","paused","setPaused","progress","setProgress","playPause","prevState","decreaseFocus","increaseFocus","decreaseBreak","increaseBreak","beginSession","Audio","play","prevCount","stop","oi"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\nimport useInterval from \"../utils/useInterval\";\nimport Timer from \"./Timer\";\nimport Display from \"./Display\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  // The current session - null where there is no session running\n  const [ currentState, setCurrentState ] = useState(\"Focusing\");\n  const [session, setSession] = useState(null);\n\n  // ToDo: Allow the user to adjust the focus and break duration.\n  const [ focusDuration, setFocusDuration ] = useState(25);\n  const [ breakDuration, setBreakDuration ] = useState(5);\n  const [ focusCount, setFocusCount ] = useState(focusDuration*60)\n  const [ breakCount, setBreakCount ] = useState(breakDuration*60)\n  const [ disabled, setDisabled ] = useState(true);\n  const [ hidden, setHidden ] = useState(false);\n  const [ paused, setPaused ] = useState(\"\");\n  const [ progress, setProgress ] = useState(0);\n\n  function playPause() {\n      setIsTimerRunning((prevState) => !prevState);\n      setDisabled(false)\n      if(!isTimerRunning) {\n        setHidden(true);\n        setPaused(\"\")\n      }else{\n        setPaused(\"PAUSED\");\n      }\n    }\n\n    function decreaseFocus() {\n      setFocusDuration(focusDuration - 5);\n      setFocusCount((focusDuration - 5)*60)\n    }\n    function increaseFocus() {\n      setFocusDuration(focusDuration + 5);\n      setFocusCount((focusDuration + 5)*60)\n    }\n    function decreaseBreak() {\n      setBreakDuration(breakDuration - 1);\n      setBreakCount((breakDuration - 1)*60)\n    }\n    function increaseBreak() {\n      setBreakDuration(breakDuration + 1);\n      setBreakCount((breakDuration + 1)*60)\n    }\n   \n    useInterval(() => {\n      beginSession();\n      },\n      isTimerRunning ? 1000 : null\n    );\n\n\n\n    function beginSession() {\n      if(focusCount === 0 || breakCount === 0) {\n        new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();\n        setProgress(0)\n        // return setSession(nextSession(focusDuration, breakDuration));\n      }else if(focusCount > 0 && currentState === \"Focusing\"){\n        setFocusCount((prevCount) => prevCount - 1);\n        setProgress(progress + 100 / focusCount);\n      }else if(breakCount > 0){\n        setBreakCount((prevCount) => prevCount - 1);  \n        setProgress(progress + 100 / breakDuration);\n        }\n    }\n\n    function stop() {\n      setFocusCount(focusDuration * 60)\n      setBreakCount(breakDuration * 60)\n      setIsTimerRunning(false);\n      setHidden(false);\n      setCurrentState(\"Focusing\");\n      setProgress(0);\n    }\n\n\n  return (\n    <div className=\"pomodoro\">\n        <div>\n            <Timer \n            disabled={isTimerRunning}\n            increaseBreak={increaseBreak}\n            decreaseBreak={decreaseBreak}\n            increaseFocus={increaseFocus}\n            decreaseFocus={decreaseFocus}\n            focusDuration={focusDuration}\n            breakDuration={breakDuration}\n            />\n      </div>\n\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            > \n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n            {/* TODO: Implement stopping the current focus or break session. and disable the stop button when there is no active session */}\n            {/* TODO: Disable the stop button when there is no active session */}\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              data-testid=\"stop\"\n              title=\"Stop the session\"\n              onClick={stop}\n              disabled={disabled}\n            >\n              <span className=\"oi oi-media-stop\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      <div>\n        {/* TODO: This area should show only when there is an active focus or break - i.e. the session is running or is paused */}\n        <Display \n          disabled={disabled}\n          hidden={hidden}\n          currentState={currentState}\n          focusDuration={focusDuration}\n          breakDuration={breakDuration}\n          isTimerRunning={isTimerRunning}\n          focusCount={focusCount}\n          breakCount={breakCount}\n          paused={paused}\n          progress={progress}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}